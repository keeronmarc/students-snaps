1) Whats difference between the following:
this.el
this.$el

GridItemView = Backbone.View.extend({
  
  template: _.template( $('#grid-template').text() ),

  tagName: 'a',

  className: 'item-grid-unit',

  initialize: function(){
    $('.container').append(this.el)
    this.render()
  },

  render: function(){
    this.$el.attr('href', "#/items/"+ this.model.get('id') )
    this.$el.append( this.template({item: this.model }) )
  }
})


2) How does this substitute into the HTML when you run "this.render()?

**************VIEWS******************
GridItemView = Backbone.View.extend({
  
  template: _.template( $('#grid-template').text() ),

..........

  render: function(){
    this.$el.attr('href', "#/items/"+ this.model.get('id') )
    this.$el.append( this.template({item: this.model }) )
  }
})


**************ROUTER******************
 "items/:id" : "showItem"

showItem: function(id) {
    $('.container').html('')
    var itemToShow = this.items.get(id)
    new FullItemView({model: itemToShow})
    console.log('we should show an item with the id ', id)
  }

3) Give another example of REFERENCE TO OBJECTS IN JS : When you store a reference to that object, you don't copy an object in js
get method, will update the return object, b/c placed in a variable and referenced to a 
a variable
